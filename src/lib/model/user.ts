import { z } from "zod";
import { user, session } from "@prisma/client";

// export type AppUser = user

export type AppSession = session  

export const AUTH_PROVIDERS = z.enum(["google","github","email-password"])
type AuthProviders = z.infer<typeof AUTH_PROVIDERS>

export const AppUser = z.object(
    {
        id: z.string().cuid().uuid().optional(),
        email: z.string().email(),
        firstname: z.string(),
        lastname: z.string(),
        password: z.string().min(6).optional(),
        user_id: z.string().optional(),
        provider: AUTH_PROVIDERS,
        emailVerified: z.boolean().default(false),
        inactive_at: z.date().nullable().default(null),
        created_at: z.date().optional(),
        update_at: z.date().optional(),
    }
);
  
  // id is omitted below because it is generated by Prisma
//   export const AppUser = z.optional(UserSchema)
export type AppUser = z.infer<typeof AppUser>

//   export const UserUpdate = UserSchema.omit({ id: true, created_at: true, updated_at: true })

  